/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    pages: Page;
    media: Media;
    projects: Project;
    'blog-posts': BlogPost;
    'craft-items': CraftItem;
    'inspiration-items': InspirationItem;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title?: string | null;
  slug?: string | null;
  layout: 'default';
  'in-header'?: boolean | null;
  'in-footer'?: boolean | null;
  intro?: string | null;
  content?: PageSectionBlock[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PageSectionBlock".
 */
export interface PageSectionBlock {
  size: 'default' | 'xs' | 'sm' | 'lg' | 'xl' | '2xl' | 'full';
  content?:
    | (ImageBlock | TextBlock | ShowReelBlock | ProjectsBlock | BlogPostsBlock | InspirationsBlock | CraftBlock)[]
    | null;
  disablePadding?: boolean | null;
  disableContainer?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'PageSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageBlock".
 */
export interface ImageBlock {
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  copyright?: string | null;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock".
 */
export interface TextBlock {
  text: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'Text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowReelBlock".
 */
export interface ShowReelBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'ShowReel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProjectsBlock".
 */
export interface ProjectsBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'Projects';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogPostsBlock".
 */
export interface BlogPostsBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'BlogPosts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InspirationsBlock".
 */
export interface InspirationsBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'Inspirations';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CraftBlock".
 */
export interface CraftBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'Craft';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title: string;
  description: string;
  timeframe: string;
  image: number | Media;
  slug?: string | null;
  content?: PageSectionBlock[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts".
 */
export interface BlogPost {
  id: number;
  title: string;
  date: string;
  image: number | Media;
  authors?:
    | {
        name: string;
        image: number | Media;
        link: string;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  content?: PageSectionBlock[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "craft-items".
 */
export interface CraftItem {
  id: number;
  title: string;
  description?: string | null;
  image: number | Media;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inspiration-items".
 */
export interface InspirationItem {
  id: number;
  title: string;
  link: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}